<?php declare(strict_types = 1);

namespace Mihaeu\Hotshowers;

/**
 * @covers Mihaeu\Hotshowers\Country
 */
class CountryTest extends \PHPUnit_Framework_TestCase
{
    public function testHasCountry()
    {
        $this->assertEquals('AD', (Country::AD())->iso3166());
        $this->assertEquals('AE', (Country::AE())->iso3166());
        $this->assertEquals('AF', (Country::AF())->iso3166());
        $this->assertEquals('AG', (Country::AG())->iso3166());
        $this->assertEquals('AI', (Country::AI())->iso3166());
        $this->assertEquals('AL', (Country::AL())->iso3166());
        $this->assertEquals('AM', (Country::AM())->iso3166());
        $this->assertEquals('AO', (Country::AO())->iso3166());
        $this->assertEquals('AP', (Country::AP())->iso3166());
        $this->assertEquals('AQ', (Country::AQ())->iso3166());
        $this->assertEquals('AR', (Country::AR())->iso3166());
        $this->assertEquals('AS', (Country::AS())->iso3166());
        $this->assertEquals('AT', (Country::AT())->iso3166());
        $this->assertEquals('AU', (Country::AU())->iso3166());
        $this->assertEquals('AW', (Country::AW())->iso3166());
        $this->assertEquals('AX', (Country::AX())->iso3166());
        $this->assertEquals('AZ', (Country::AZ())->iso3166());
        $this->assertEquals('BA', (Country::BA())->iso3166());
        $this->assertEquals('BB', (Country::BB())->iso3166());
        $this->assertEquals('BD', (Country::BD())->iso3166());
        $this->assertEquals('BE', (Country::BE())->iso3166());
        $this->assertEquals('BF', (Country::BF())->iso3166());
        $this->assertEquals('BG', (Country::BG())->iso3166());
        $this->assertEquals('BH', (Country::BH())->iso3166());
        $this->assertEquals('BI', (Country::BI())->iso3166());
        $this->assertEquals('BJ', (Country::BJ())->iso3166());
        $this->assertEquals('BL', (Country::BL())->iso3166());
        $this->assertEquals('BM', (Country::BM())->iso3166());
        $this->assertEquals('BN', (Country::BN())->iso3166());
        $this->assertEquals('BO', (Country::BO())->iso3166());
        $this->assertEquals('BQ', (Country::BQ())->iso3166());
        $this->assertEquals('BR', (Country::BR())->iso3166());
        $this->assertEquals('BS', (Country::BS())->iso3166());
        $this->assertEquals('BT', (Country::BT())->iso3166());
        $this->assertEquals('BV', (Country::BV())->iso3166());
        $this->assertEquals('BW', (Country::BW())->iso3166());
        $this->assertEquals('BY', (Country::BY())->iso3166());
        $this->assertEquals('BZ', (Country::BZ())->iso3166());
        $this->assertEquals('CA', (Country::CA())->iso3166());
        $this->assertEquals('CC', (Country::CC())->iso3166());
        $this->assertEquals('CD', (Country::CD())->iso3166());
        $this->assertEquals('CF', (Country::CF())->iso3166());
        $this->assertEquals('CG', (Country::CG())->iso3166());
        $this->assertEquals('CH', (Country::CH())->iso3166());
        $this->assertEquals('CI', (Country::CI())->iso3166());
        $this->assertEquals('CK', (Country::CK())->iso3166());
        $this->assertEquals('CL', (Country::CL())->iso3166());
        $this->assertEquals('CM', (Country::CM())->iso3166());
        $this->assertEquals('CN', (Country::CN())->iso3166());
        $this->assertEquals('CO', (Country::CO())->iso3166());
        $this->assertEquals('CR', (Country::CR())->iso3166());
        $this->assertEquals('CU', (Country::CU())->iso3166());
        $this->assertEquals('CV', (Country::CV())->iso3166());
        $this->assertEquals('CW', (Country::CW())->iso3166());
        $this->assertEquals('CX', (Country::CX())->iso3166());
        $this->assertEquals('CY', (Country::CY())->iso3166());
        $this->assertEquals('CZ', (Country::CZ())->iso3166());
        $this->assertEquals('DE', (Country::DE())->iso3166());
        $this->assertEquals('DJ', (Country::DJ())->iso3166());
        $this->assertEquals('DK', (Country::DK())->iso3166());
        $this->assertEquals('DM', (Country::DM())->iso3166());
        $this->assertEquals('DO', (Country::DO())->iso3166());
        $this->assertEquals('DZ', (Country::DZ())->iso3166());
        $this->assertEquals('EC', (Country::EC())->iso3166());
        $this->assertEquals('EE', (Country::EE())->iso3166());
        $this->assertEquals('EG', (Country::EG())->iso3166());
        $this->assertEquals('EH', (Country::EH())->iso3166());
        $this->assertEquals('ER', (Country::ER())->iso3166());
        $this->assertEquals('ES', (Country::ES())->iso3166());
        $this->assertEquals('ET', (Country::ET())->iso3166());
        $this->assertEquals('EU', (Country::EU())->iso3166());
        $this->assertEquals('FI', (Country::FI())->iso3166());
        $this->assertEquals('FJ', (Country::FJ())->iso3166());
        $this->assertEquals('FK', (Country::FK())->iso3166());
        $this->assertEquals('FM', (Country::FM())->iso3166());
        $this->assertEquals('FO', (Country::FO())->iso3166());
        $this->assertEquals('FR', (Country::FR())->iso3166());
        $this->assertEquals('GA', (Country::GA())->iso3166());
        $this->assertEquals('GB', (Country::GB())->iso3166());
        $this->assertEquals('GD', (Country::GD())->iso3166());
        $this->assertEquals('GE', (Country::GE())->iso3166());
        $this->assertEquals('GF', (Country::GF())->iso3166());
        $this->assertEquals('GG', (Country::GG())->iso3166());
        $this->assertEquals('GH', (Country::GH())->iso3166());
        $this->assertEquals('GI', (Country::GI())->iso3166());
        $this->assertEquals('GL', (Country::GL())->iso3166());
        $this->assertEquals('GM', (Country::GM())->iso3166());
        $this->assertEquals('GN', (Country::GN())->iso3166());
        $this->assertEquals('GP', (Country::GP())->iso3166());
        $this->assertEquals('GQ', (Country::GQ())->iso3166());
        $this->assertEquals('GR', (Country::GR())->iso3166());
        $this->assertEquals('GS', (Country::GS())->iso3166());
        $this->assertEquals('GT', (Country::GT())->iso3166());
        $this->assertEquals('GU', (Country::GU())->iso3166());
        $this->assertEquals('GW', (Country::GW())->iso3166());
        $this->assertEquals('GY', (Country::GY())->iso3166());
        $this->assertEquals('HK', (Country::HK())->iso3166());
        $this->assertEquals('HM', (Country::HM())->iso3166());
        $this->assertEquals('HN', (Country::HN())->iso3166());
        $this->assertEquals('HR', (Country::HR())->iso3166());
        $this->assertEquals('HT', (Country::HT())->iso3166());
        $this->assertEquals('HU', (Country::HU())->iso3166());
        $this->assertEquals('ID', (Country::ID())->iso3166());
        $this->assertEquals('IE', (Country::IE())->iso3166());
        $this->assertEquals('IL', (Country::IL())->iso3166());
        $this->assertEquals('IM', (Country::IM())->iso3166());
        $this->assertEquals('IN', (Country::IN())->iso3166());
        $this->assertEquals('IO', (Country::IO())->iso3166());
        $this->assertEquals('IQ', (Country::IQ())->iso3166());
        $this->assertEquals('IR', (Country::IR())->iso3166());
        $this->assertEquals('IS', (Country::IS())->iso3166());
        $this->assertEquals('IT', (Country::IT())->iso3166());
        $this->assertEquals('JE', (Country::JE())->iso3166());
        $this->assertEquals('JM', (Country::JM())->iso3166());
        $this->assertEquals('JO', (Country::JO())->iso3166());
        $this->assertEquals('JP', (Country::JP())->iso3166());
        $this->assertEquals('KE', (Country::KE())->iso3166());
        $this->assertEquals('KG', (Country::KG())->iso3166());
        $this->assertEquals('KH', (Country::KH())->iso3166());
        $this->assertEquals('KI', (Country::KI())->iso3166());
        $this->assertEquals('KM', (Country::KM())->iso3166());
        $this->assertEquals('KN', (Country::KN())->iso3166());
        $this->assertEquals('KP', (Country::KP())->iso3166());
        $this->assertEquals('KR', (Country::KR())->iso3166());
        $this->assertEquals('KW', (Country::KW())->iso3166());
        $this->assertEquals('KY', (Country::KY())->iso3166());
        $this->assertEquals('KZ', (Country::KZ())->iso3166());
        $this->assertEquals('LA', (Country::LA())->iso3166());
        $this->assertEquals('LB', (Country::LB())->iso3166());
        $this->assertEquals('LC', (Country::LC())->iso3166());
        $this->assertEquals('LI', (Country::LI())->iso3166());
        $this->assertEquals('LK', (Country::LK())->iso3166());
        $this->assertEquals('LR', (Country::LR())->iso3166());
        $this->assertEquals('LS', (Country::LS())->iso3166());
        $this->assertEquals('LT', (Country::LT())->iso3166());
        $this->assertEquals('LU', (Country::LU())->iso3166());
        $this->assertEquals('LV', (Country::LV())->iso3166());
        $this->assertEquals('LY', (Country::LY())->iso3166());
        $this->assertEquals('MA', (Country::MA())->iso3166());
        $this->assertEquals('MC', (Country::MC())->iso3166());
        $this->assertEquals('MD', (Country::MD())->iso3166());
        $this->assertEquals('ME', (Country::ME())->iso3166());
        $this->assertEquals('MF', (Country::MF())->iso3166());
        $this->assertEquals('MG', (Country::MG())->iso3166());
        $this->assertEquals('MH', (Country::MH())->iso3166());
        $this->assertEquals('MK', (Country::MK())->iso3166());
        $this->assertEquals('ML', (Country::ML())->iso3166());
        $this->assertEquals('MM', (Country::MM())->iso3166());
        $this->assertEquals('MN', (Country::MN())->iso3166());
        $this->assertEquals('MO', (Country::MO())->iso3166());
        $this->assertEquals('MP', (Country::MP())->iso3166());
        $this->assertEquals('MQ', (Country::MQ())->iso3166());
        $this->assertEquals('MR', (Country::MR())->iso3166());
        $this->assertEquals('MS', (Country::MS())->iso3166());
        $this->assertEquals('MT', (Country::MT())->iso3166());
        $this->assertEquals('MU', (Country::MU())->iso3166());
        $this->assertEquals('MV', (Country::MV())->iso3166());
        $this->assertEquals('MW', (Country::MW())->iso3166());
        $this->assertEquals('MX', (Country::MX())->iso3166());
        $this->assertEquals('MY', (Country::MY())->iso3166());
        $this->assertEquals('MZ', (Country::MZ())->iso3166());
        $this->assertEquals('NA', (Country::NA())->iso3166());
        $this->assertEquals('NC', (Country::NC())->iso3166());
        $this->assertEquals('NE', (Country::NE())->iso3166());
        $this->assertEquals('NF', (Country::NF())->iso3166());
        $this->assertEquals('NG', (Country::NG())->iso3166());
        $this->assertEquals('NI', (Country::NI())->iso3166());
        $this->assertEquals('NL', (Country::NL())->iso3166());
        $this->assertEquals('NO', (Country::NO())->iso3166());
        $this->assertEquals('NP', (Country::NP())->iso3166());
        $this->assertEquals('NR', (Country::NR())->iso3166());
        $this->assertEquals('NU', (Country::NU())->iso3166());
        $this->assertEquals('NZ', (Country::NZ())->iso3166());
        $this->assertEquals('OM', (Country::OM())->iso3166());
        $this->assertEquals('PA', (Country::PA())->iso3166());
        $this->assertEquals('PE', (Country::PE())->iso3166());
        $this->assertEquals('PF', (Country::PF())->iso3166());
        $this->assertEquals('PG', (Country::PG())->iso3166());
        $this->assertEquals('PH', (Country::PH())->iso3166());
        $this->assertEquals('PK', (Country::PK())->iso3166());
        $this->assertEquals('PL', (Country::PL())->iso3166());
        $this->assertEquals('PM', (Country::PM())->iso3166());
        $this->assertEquals('PN', (Country::PN())->iso3166());
        $this->assertEquals('PR', (Country::PR())->iso3166());
        $this->assertEquals('PS', (Country::PS())->iso3166());
        $this->assertEquals('PT', (Country::PT())->iso3166());
        $this->assertEquals('PW', (Country::PW())->iso3166());
        $this->assertEquals('PY', (Country::PY())->iso3166());
        $this->assertEquals('QA', (Country::QA())->iso3166());
        $this->assertEquals('RE', (Country::RE())->iso3166());
        $this->assertEquals('RO', (Country::RO())->iso3166());
        $this->assertEquals('RS', (Country::RS())->iso3166());
        $this->assertEquals('RU', (Country::RU())->iso3166());
        $this->assertEquals('RW', (Country::RW())->iso3166());
        $this->assertEquals('SA', (Country::SA())->iso3166());
        $this->assertEquals('SB', (Country::SB())->iso3166());
        $this->assertEquals('SC', (Country::SC())->iso3166());
        $this->assertEquals('SD', (Country::SD())->iso3166());
        $this->assertEquals('SE', (Country::SE())->iso3166());
        $this->assertEquals('SG', (Country::SG())->iso3166());
        $this->assertEquals('SH', (Country::SH())->iso3166());
        $this->assertEquals('SI', (Country::SI())->iso3166());
        $this->assertEquals('SJ', (Country::SJ())->iso3166());
        $this->assertEquals('SK', (Country::SK())->iso3166());
        $this->assertEquals('SL', (Country::SL())->iso3166());
        $this->assertEquals('SM', (Country::SM())->iso3166());
        $this->assertEquals('SN', (Country::SN())->iso3166());
        $this->assertEquals('SO', (Country::SO())->iso3166());
        $this->assertEquals('SR', (Country::SR())->iso3166());
        $this->assertEquals('SS', (Country::SS())->iso3166());
        $this->assertEquals('ST', (Country::ST())->iso3166());
        $this->assertEquals('SV', (Country::SV())->iso3166());
        $this->assertEquals('SX', (Country::SX())->iso3166());
        $this->assertEquals('SY', (Country::SY())->iso3166());
        $this->assertEquals('SZ', (Country::SZ())->iso3166());
        $this->assertEquals('TC', (Country::TC())->iso3166());
        $this->assertEquals('TD', (Country::TD())->iso3166());
        $this->assertEquals('TF', (Country::TF())->iso3166());
        $this->assertEquals('TG', (Country::TG())->iso3166());
        $this->assertEquals('TH', (Country::TH())->iso3166());
        $this->assertEquals('TJ', (Country::TJ())->iso3166());
        $this->assertEquals('TK', (Country::TK())->iso3166());
        $this->assertEquals('TL', (Country::TL())->iso3166());
        $this->assertEquals('TM', (Country::TM())->iso3166());
        $this->assertEquals('TN', (Country::TN())->iso3166());
        $this->assertEquals('TO', (Country::TO())->iso3166());
        $this->assertEquals('TR', (Country::TR())->iso3166());
        $this->assertEquals('TT', (Country::TT())->iso3166());
        $this->assertEquals('TV', (Country::TV())->iso3166());
        $this->assertEquals('TW', (Country::TW())->iso3166());
        $this->assertEquals('TZ', (Country::TZ())->iso3166());
        $this->assertEquals('UA', (Country::UA())->iso3166());
        $this->assertEquals('UG', (Country::UG())->iso3166());
        $this->assertEquals('UM', (Country::UM())->iso3166());
        $this->assertEquals('US', (Country::US())->iso3166());
        $this->assertEquals('UY', (Country::UY())->iso3166());
        $this->assertEquals('UZ', (Country::UZ())->iso3166());
        $this->assertEquals('VA', (Country::VA())->iso3166());
        $this->assertEquals('VC', (Country::VC())->iso3166());
        $this->assertEquals('VE', (Country::VE())->iso3166());
        $this->assertEquals('VG', (Country::VG())->iso3166());
        $this->assertEquals('VI', (Country::VI())->iso3166());
        $this->assertEquals('VN', (Country::VN())->iso3166());
        $this->assertEquals('VU', (Country::VU())->iso3166());
        $this->assertEquals('WF', (Country::WF())->iso3166());
        $this->assertEquals('WS', (Country::WS())->iso3166());
        $this->assertEquals('YE', (Country::YE())->iso3166());
        $this->assertEquals('YT', (Country::YT())->iso3166());
        $this->assertEquals('ZA', (Country::ZA())->iso3166());
        $this->assertEquals('ZM', (Country::ZM())->iso3166());
        $this->assertEquals('ZW', (Country::ZW())->iso3166());
    }
}
